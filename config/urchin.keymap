/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
// #include <dt-bindings/zmk/behaviours.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FNC 4
#define SET 5
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		mt: mod_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <175>;
			bindings = <&kp>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I &kp O &kp P
  &mt LGUI A &mt LALT S &mt LCTRL D &mt LSHFT F &kp G		&kp H &mt RSHFT J &mt RCTRL K &mt RALT L &mt RGUI SEMI
			&kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
			     &lt NAV BSPC &lt FNC TAB		&lt SYM ENTER &lt NUM SPACE
			>;
		};

		// Numbers and high frequency symbols
		num_layer {
			label = "Num";
			bindings = <
			&kp LBKT &kp N7 &kp N8 &kp N9 &kp RBKT		&none &none &none &none &none
		       &kp APOS &kp N4 &kp N5 &kp N6 &kp EQUAL		&none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI
			&kp NUBS &kp N1 &kp N2 &kp N3 &kp NUHS		&none &none &none &none &none
					     &kp N0  &kp MINUS		&trans &trans
			>;
		};

		// Arrow keys and navigation
		nav_layer {
			label = "Nav";
			bindings = <
		     &kp ESC  &none &none &none &none		&kp HOME &kp PG_DN  &kp PG_UP &kp END &kp BSPC
	 &kp LGUI &kp LALT &kp LCTRL &kp LSHFT  &none		&kp LEFT &kp DOWN   &kp UP &kp RIGHT  &kp CAPS
			&none &none &none &none &none		&none &none &none &none &kp DEL
					&trans &trans		&none  &none
			>;
		};

		// Shifted symbols, with some differences for low-frequency.
		symbol_layer {
			label = "Sett.";
			bindings = <
	    &kp LS(LBKT) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(RBKT)		&none &none &none &none &none
	   &kp LS(APOS) &kp LS(N4) &kp LS(N5) &kp LS(N6) &kp LS(EQUAL)		&none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI
	       &kp GRAVE &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(NUHS)		&none &none &none &none &none
					     &kp LS(N0)  &kp LS(MINUS)		&trans &trans
			>;
		};

		// Function keys. Note some spare space for utilities.
		fnc_layer {
			label = "Func.";
			bindings = <
			&none &none &none &none &none		&kp F12 &kp F7 &kp F8 &kp F9 &none
	 &kp LGUI &kp LALT &kp LCTRL &kp LSHFT  &none		&kp F11 &kp F4 &kp F5 &kp F6 &none
			&none &none &none &none &none		&kp F10 &kp F1 &kp F2 &kp F3 &none
					&trans &trans		&mo SET &none
			>;
		};

		// Used to change the keyboard's settings. Activated w second thumb on L then R.
		settings_layer {
			label = "Sett.";
			bindings = <
			    &bootloader &none &none &none &none		&none &none &none &none &bootloader
			&none &none &bt BT_CLR &bt BT_PRV &none		&none &bt BT_NXT &bt BT_CLR &none &none
				  &none &none &none &none &none		&none &none &none &none &none
						    &none &none		&none &none 
			>;
		};
	};
};
